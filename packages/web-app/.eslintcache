[{"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\index.tsx":"1","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\reportWebVitals.ts":"2","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\App.tsx":"3","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\createMyTheme.ts":"4","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AppContent.tsx":"5","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Login.tsx":"6","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\PrivateRoute.tsx":"7","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Beers.tsx":"8","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AddBeer.tsx":"9","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\EditBeer.tsx":"10","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\defaultBeerImgUrl.ts":"11","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerForm.tsx":"12","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\ImageUpload.tsx":"13","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\MegaLikeIcon.tsx":"14","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\useInfiniteScroll.ts":"15","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerCard.tsx":"16","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\FunnelIcon.tsx":"17"},{"size":569,"mtime":1606938020143,"results":"18","hashOfConfig":"19"},{"size":422,"mtime":1606938911924,"results":"20","hashOfConfig":"19"},{"size":1461,"mtime":1607352719455,"results":"21","hashOfConfig":"19"},{"size":1254,"mtime":1607359704709,"results":"22","hashOfConfig":"19"},{"size":1004,"mtime":1606942062913,"results":"23","hashOfConfig":"19"},{"size":2951,"mtime":1607361185207,"results":"24","hashOfConfig":"19"},{"size":441,"mtime":1606941167970,"results":"25","hashOfConfig":"19"},{"size":2820,"mtime":1607360596749,"results":"26","hashOfConfig":"19"},{"size":505,"mtime":1606940140675,"results":"27","hashOfConfig":"19"},{"size":989,"mtime":1606939724589,"results":"28","hashOfConfig":"19"},{"size":2661830,"mtime":1607122637086,"results":"29","hashOfConfig":"19"},{"size":3641,"mtime":1606939990904,"results":"30","hashOfConfig":"19"},{"size":2817,"mtime":1607117123929,"results":"31","hashOfConfig":"19"},{"size":1561,"mtime":1607354592627,"results":"32","hashOfConfig":"19"},{"size":833,"mtime":1607121663354,"results":"33","hashOfConfig":"19"},{"size":2012,"mtime":1607361309174,"results":"34","hashOfConfig":"19"},{"size":692,"mtime":1607359508566,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"16it6zb",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"38"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"41"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\index.tsx",[],["78","79","80","81","82"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\reportWebVitals.ts",[],["83","84","85","86","87"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\App.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\createMyTheme.ts",["88","89","90","91"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AppContent.tsx",["92"],"import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { BeerSearchProvider } from 'common/contexts/BeerSearch'\nimport { useAuthState } from 'common/contexts/Auth'\nimport { PrivateRoute } from './PrivateRoute'\nimport { Beers } from './Beers'\nimport { AddBeer } from './AddBeer'\nimport { EditBeer } from './EditBeer'\n\nconst Test: React.FC = () => {\n  const auth = useAuthState()\n  return (\n    <div>\n      <h2>test</h2>\n      <p>{`auth: ${auth}`}</p>\n      <p>{`user: ${auth.user && auth.user.email}`}</p>\n    </div>\n  )\n}\n\nconst AppContentBase: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"/*\" element={<p>not found</p>} />\n      <Route path=\"/beers\" element={<Beers />} />\n      <Route path=\"/add\" element={<AddBeer />} />\n      <Route path=\"/:id\" element={<EditBeer />} />\n    </Routes>\n  )\n}\n\nexport const AppContent: React.FC = () => (\n  <BeerSearchProvider>\n    <AppContentBase />\n  </BeerSearchProvider>\n)\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Login.tsx",["93","94","95","96"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\PrivateRoute.tsx",["97","98"],"import React from 'react'\nimport { Navigate, Route, useNavigate } from 'react-router-dom'\nimport { RouteProps } from 'react-router'\nimport { useAuthState } from 'common/contexts/Auth'\n\nconst isAuthenticated = false\n\nexport const PrivateRoute: React.FC<RouteProps> = (props) => {\n  // const navigate = useNavigate()\n  const authState = useAuthState()\n  if (!authState.loggedIn) return <Navigate to=\"/login\" />\n  return <Route {...props} />\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Beers.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AddBeer.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\EditBeer.tsx",["99"],"import React, { useEffect, useState } from 'react'\nimport IBeer from 'common/models/Beer'\nimport axios from 'axios'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { BeerForm } from './BeerForm'\n\nexport const EditBeer: React.FC = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const [beer, setBeer] = useState<IBeer | undefined>(undefined)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    ;(async (): Promise<void> => {\n      setLoading(true)\n      const { data: fetchedBeer } = await axios.get(`api/beers/${id}`)\n      setBeer(fetchedBeer)\n      setLoading(false)\n    })()\n  }, [])\n  const onSubmit = async (submittedBeer: IBeer): Promise<void> => {\n    const { data: beers } = await axios.patch(`api/beers/${id}`, submittedBeer)\n    navigate('/beers')\n  }\n  return (\n    <>\n      {!loading && <BeerForm onSubmit={onSubmit} submitButtonText=\"save\" beer={beer} />}\n      {loading && <p>loading..</p>}\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\defaultBeerImgUrl.ts",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerForm.tsx",["100","101"],"import Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport IBeer from 'common/models/Beer'\nimport Rating from 'common/models/Rating'\nimport React, { SyntheticEvent, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Button from '@material-ui/core/Button'\nimport clsx from 'clsx'\nimport { ImageUpload, UploadedFile } from './ImageUpload'\nimport { MegaLikeIcon } from './icons/MegaLikeIcon'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  formElement: {\n    marginTop: '12px',\n    '&:first-child': {\n      marginTop: '0',\n    },\n  },\n}))\n\nconst getBase64 = async (file: Blob): Promise<string | undefined> => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file as Blob)\n\n  return new Promise((resolve, reject) => {\n    reader.onload = (): void => (reader.result ? resolve(reader.result as string) : resolve(undefined))\n    reader.onerror = (error): void => reject(error)\n  })\n}\n\ninterface Props {\n  onSubmit(beer: IBeer): void\n  submitButtonText: string\n  beer?: IBeer | undefined\n  // loading?: boolean\n}\n\nexport const BeerForm: React.FC<Props> = ({ onSubmit, submitButtonText, beer }) => {\n  const classes = useStyles()\n\n  const [rating, setRating] = useState<Rating | undefined>()\n  const [pictureURL, setPictureURL] = useState<string>()\n  const { register, handleSubmit, watch, errors, reset } = useForm<IBeer>()\n\n  useEffect(() => {\n    reset(beer)\n    setRating(beer && beer.rating)\n    setPictureURL(beer && beer.picture)\n  }, [beer])\n  const handleRate = (event: SyntheticEvent, newRating: Rating): void => {\n    setRating(newRating)\n  }\n  const handleSubmitFile = async (file: UploadedFile): Promise<void> => {\n    let picture = ''\n    if (file) {\n      picture = (await getBase64(file)) || ''\n    }\n    setPictureURL(picture)\n  }\n  const submitForm = async (baseBeer: IBeer): Promise<void> => {\n    const submittedBeer: IBeer = { ...baseBeer, rating, picture: pictureURL }\n    console.log(beer)\n    onSubmit(submittedBeer)\n  }\n  return (\n    <>\n      <form onSubmit={handleSubmit(submitForm)} className={classes.root}>\n        <Container maxWidth=\"xs\" className={classes.formElement}>\n          <ImageUpload onSubmitFile={handleSubmitFile} pictureURL={pictureURL} />\n        </Container>\n        <TextField id=\"name\" name=\"name\" label=\"Name\" inputRef={register} className={classes.formElement} fullWidth />\n\n        <ToggleButtonGroup\n          exclusive\n          value={rating}\n          onChange={handleRate}\n          className={clsx({ [classes.formElement]: true })}\n          size=\"large\"\n        >\n          <ToggleButton value={Rating.DISLIKE} aria-label=\"thumbs down\">\n            <ThumbDownIcon />\n          </ToggleButton>\n          <ToggleButton value={Rating.LIKE} aria-label=\"thumbs up\">\n            <ThumbUpIcon style={{ color: '#48a70b' }} />\n          </ToggleButton>\n          <ToggleButton value={Rating.MEGALIKE} aria-label=\"mega thumbs up\">\n            <MegaLikeIcon svgProps={{ style: { overflow: 'visible' } }} />\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        <Button className={classes.formElement} variant=\"outlined\" fullWidth type=\"submit\">\n          {submitButtonText}\n        </Button>\n      </form>\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\ImageUpload.tsx",["102"],"import React, { SyntheticEvent, useEffect, useState, useCallback } from 'react'\nimport { FileRejection, useDropzone } from 'react-dropzone'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport AddIcon from '@material-ui/icons/Add'\n\nconst useStyles = makeStyles((theme) => ({\n  dropzone: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#bdbdbd',\n    padding: '20px',\n    border: '3px dashed #eeeeee',\n    backgroundColor: 'white',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    boxSizing: 'border-box',\n  },\n  dropReject: {\n    borderColor: 'red',\n  },\n  dropAccept: {\n    borderColor: 'lightgreen',\n  },\n  dropActive: {\n    backgroundColor: '#eeeeee',\n    color: 'black',\n  },\n  thumbsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16,\n  },\n\n  emptyFileInput: { display: 'flex', flexDirection: 'column', alignItems: 'center' },\n  img: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n}))\n\nexport interface UploadedFile extends File {\n  preview?: string\n}\ninterface IProps {\n  onSubmitFile(uploadedFile: UploadedFile): void\n  pictureURL?: string\n}\n\n// TODO props?\nexport const ImageUpload: React.FC<IProps> = ({ onSubmitFile, pictureURL }) => {\n  const [file, setFile] = useState<UploadedFile>()\n\n  useEffect(() => {\n    return (): void => {\n      if (file && file.preview) {\n        URL.revokeObjectURL(file.preview)\n      }\n    }\n  }, [])\n  const onDrop = useCallback((acceptedFiles: File[], rejectedFiles: FileRejection[]) => {\n    if (rejectedFiles.length > 0) {\n      // TODO \"error toast\" something\n      console.log('rejectedFiles', rejectedFiles)\n    }\n    const uploadedFile: UploadedFile = acceptedFiles[0]\n    if (uploadedFile) {\n      setFile(\n        Object.assign(uploadedFile, {\n          preview: URL.createObjectURL(uploadedFile),\n        }),\n      )\n      onSubmitFile(uploadedFile)\n    }\n  }, [])\n\n  const classes = useStyles()\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    onDrop,\n    maxSize: 5242880,\n    minSize: 2,\n    maxFiles: 1,\n    accept: 'image/*',\n  })\n\n  return (\n    <>\n      <div\n        {...getRootProps({\n          className: clsx({\n            [classes.dropzone]: true,\n            [classes.dropReject]: isDragReject,\n            [classes.dropAccept]: isDragAccept,\n            [classes.dropActive]: isDragActive,\n          }),\n        })}\n      >\n        <input {...getInputProps()} />\n        {!pictureURL && (\n          <div className={classes.emptyFileInput}>\n            <AddIcon fontSize=\"large\" />\n            <p>Import your beer picture by dragging it or clicking here</p>\n          </div>\n        )}\n        {pictureURL && <img src={pictureURL} alt=\"beer\" className={classes.img} />}\n      </div>\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\MegaLikeIcon.tsx",["103"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\useInfiniteScroll.ts",["104"],"import React, { useCallback, useRef } from 'react'\n\nexport const useInfiniteScroll = <T>(\n  onTrigger: () => void,\n  loading: boolean,\n  loadedAll: boolean,\n): [lastElement: (node: T) => void] => {\n  const observer = useRef<IntersectionObserver | null>(null)\n  const lastElementRef = useCallback(\n    (node: T): void => {\n      if (loading) {\n        return\n      }\n      if (observer.current) {\n        observer.current.disconnect()\n      }\n      observer.current = new IntersectionObserver((entries) => {\n        if (entries[0].isIntersecting && !loadedAll) {\n          console.log('last element is visible, triggering new data Fetch')\n          onTrigger()\n        }\n      })\n      if (node) {\n        observer.current.observe((node as unknown) as Element)\n      }\n    },\n    [loading, loadedAll],\n  )\n  return [lastElementRef]\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerCard.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\FunnelIcon.tsx",["105"],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":16},{"ruleId":"116","severity":1,"message":"120","line":2,"column":18,"nodeType":"118","messageId":"119","endLine":2,"endColumn":23},{"ruleId":"116","severity":1,"message":"121","line":2,"column":25,"nodeType":"118","messageId":"119","endLine":2,"endColumn":31},{"ruleId":"116","severity":1,"message":"122","line":2,"column":33,"nodeType":"118","messageId":"119","endLine":2,"endColumn":37},{"ruleId":"116","severity":1,"message":"123","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":22},{"ruleId":"116","severity":1,"message":"124","line":38,"column":10,"nodeType":"118","messageId":"119","endLine":38,"endColumn":28},{"ruleId":"116","severity":1,"message":"125","line":38,"column":30,"nodeType":"118","messageId":"119","endLine":38,"endColumn":51},{"ruleId":"116","severity":1,"message":"126","line":39,"column":35,"nodeType":"118","messageId":"119","endLine":39,"endColumn":40},{"ruleId":"116","severity":1,"message":"127","line":39,"column":42,"nodeType":"118","messageId":"119","endLine":39,"endColumn":48},{"ruleId":"116","severity":1,"message":"128","line":2,"column":27,"nodeType":"118","messageId":"119","endLine":2,"endColumn":38},{"ruleId":"116","severity":1,"message":"129","line":6,"column":7,"nodeType":"118","messageId":"119","endLine":6,"endColumn":22},{"ruleId":"116","severity":1,"message":"130","line":22,"column":19,"nodeType":"118","messageId":"119","endLine":22,"endColumn":24},{"ruleId":"116","severity":1,"message":"126","line":53,"column":35,"nodeType":"118","messageId":"119","endLine":53,"endColumn":40},{"ruleId":"116","severity":1,"message":"127","line":53,"column":42,"nodeType":"118","messageId":"119","endLine":53,"endColumn":48},{"ruleId":"116","severity":1,"message":"131","line":1,"column":17,"nodeType":"118","messageId":"119","endLine":1,"endColumn":31},{"ruleId":"116","severity":1,"message":"132","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":19},{"ruleId":"116","severity":1,"message":"133","line":1,"column":8,"nodeType":"118","messageId":"119","endLine":1,"endColumn":13},{"ruleId":"116","severity":1,"message":"132","line":2,"column":10,"nodeType":"118","messageId":"119","endLine":2,"endColumn":19},"lines-around-directive",["134"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'orange' is defined but never used.","'grey' is defined but never used.","'PrivateRoute' is defined but never used.","'redirectToReferrer' is assigned a value but never used.","'setRedirectToReferrer' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useNavigate' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'beers' is assigned a value but never used.","'SyntheticEvent' is defined but never used.","'withTheme' is defined but never used.","'React' is defined but never used.","padding-line-between-statements"]