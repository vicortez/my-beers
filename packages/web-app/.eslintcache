[{"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\index.tsx":"1","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\reportWebVitals.ts":"2","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\App.tsx":"3","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\createMyTheme.ts":"4","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AppContent.tsx":"5","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Login.tsx":"6","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\PrivateRoute.tsx":"7","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Beers.tsx":"8","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AddBeer.tsx":"9","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\EditBeer.tsx":"10","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\defaultBeerImgUrl.ts":"11","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerForm.tsx":"12","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\ImageUpload.tsx":"13","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\MegaLikeIcon.tsx":"14","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\useInfiniteScroll.tsx":"15"},{"size":569,"mtime":1606938020143,"results":"16","hashOfConfig":"17"},{"size":422,"mtime":1606938911924,"results":"18","hashOfConfig":"17"},{"size":1461,"mtime":1606943907210,"results":"19","hashOfConfig":"17"},{"size":1144,"mtime":1606938852734,"results":"20","hashOfConfig":"17"},{"size":1004,"mtime":1606942062913,"results":"21","hashOfConfig":"17"},{"size":1234,"mtime":1606942136745,"results":"22","hashOfConfig":"17"},{"size":441,"mtime":1606941167970,"results":"23","hashOfConfig":"17"},{"size":1900,"mtime":1607115119015,"results":"24","hashOfConfig":"17"},{"size":505,"mtime":1606940140675,"results":"25","hashOfConfig":"17"},{"size":989,"mtime":1606939724589,"results":"26","hashOfConfig":"17"},{"size":493,"mtime":1606784601785,"results":"27","hashOfConfig":"17"},{"size":3641,"mtime":1606939990904,"results":"28","hashOfConfig":"17"},{"size":2891,"mtime":1606939608903,"results":"29","hashOfConfig":"17"},{"size":1575,"mtime":1606939040087,"results":"30","hashOfConfig":"17"},{"size":868,"mtime":1607115085769,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16it6zb",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\index.tsx",[],["72","73","74","75","76"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\reportWebVitals.ts",[],["77","78","79","80","81"],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\App.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\createMyTheme.ts",["82","83","84","85"],"import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\nimport { purple, green, orange, grey } from '@material-ui/core/colors'\nimport { Theme } from '@material-ui/core'\n\ndeclare module '@material-ui/core/styles/createMuiTheme' {\n  // interface Theme {\n  //   status: {\n  //     danger: string\n  //   }\n  //   overrides: {\n  //     MuiToggleButton: {\n  //       selected: {\n  //         backGroundColor: string\n  //       }\n  //     }\n  //   }\n  // }\n  // allow configuration using `createMuiTheme`\n  // interface ThemeOptions {\n  //   appDrawer?: {\n  //     width?: React.CSSProperties['width']\n  //     breakpoint?: Breakpoint\n  //   }\n  // }\n}\n\nexport const createMyTheme = (options?: ThemeOptions): Theme => {\n  return createMuiTheme({\n    // overrides: {\n    //   MuiToggleButton: {\n    //     selected: {\n    //       backGroundColor: 'red',\n    //     },\n    //   },\n    // },\n    // palette: {\n    //   primary: {\n    //     main: purple[500],\n    //     grey: grey[400],\n    //   },\n    //   secondary: {\n    //     main: green[500],\n    //   },\n    // },\n    // status: {\n    //   danger: orange[500],\n    // },\n  })\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AppContent.tsx",["86"],"import React from 'react'\nimport { Routes, Route } from 'react-router-dom'\nimport { BeerSearchProvider } from 'common/contexts/BeerSearch'\nimport { useAuthState } from 'common/contexts/Auth'\nimport { PrivateRoute } from './PrivateRoute'\nimport { Beers } from './Beers'\nimport { AddBeer } from './AddBeer'\nimport { EditBeer } from './EditBeer'\n\nconst Test: React.FC = () => {\n  const auth = useAuthState()\n  return (\n    <div>\n      <h2>test</h2>\n      <p>{`auth: ${auth}`}</p>\n      <p>{`user: ${auth.user && auth.user.email}`}</p>\n    </div>\n  )\n}\n\nconst AppContentBase: React.FC = () => {\n  return (\n    <Routes>\n      <Route path=\"/test\" element={<Test />} />\n      <Route path=\"/*\" element={<p>not found</p>} />\n      <Route path=\"/beers\" element={<Beers />} />\n      <Route path=\"/add\" element={<AddBeer />} />\n      <Route path=\"/:id\" element={<EditBeer />} />\n    </Routes>\n  )\n}\n\nexport const AppContent: React.FC = () => (\n  <BeerSearchProvider>\n    <AppContentBase />\n  </BeerSearchProvider>\n)\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Login.tsx",["87","88","89","90"],"import { useAuth, useAuthControl } from 'common/contexts/Auth'\nimport React from 'react'\nimport { useForm } from 'react-hook-form'\n\ntype RedirectUrl = string | boolean\ninterface Inputs {\n  password: string\n  email: string\n}\nexport const Login: React.FC = () => {\n  const [redirectToReferrer, setRedirectToReferrer] = React.useState<RedirectUrl>(false)\n  const { register, handleSubmit, watch, errors } = useForm<Inputs>()\n  const authState = useAuth()\n  const authControl = useAuthControl()\n\n  const onSubmit = async (inputs: Inputs): Promise<void> => {\n    console.log(inputs)\n    // const { data } = await axios.post('oauth2/login', { email: inputs.email, password: inputs.password })\n    authControl.login({ email: inputs.email, password: inputs.password })\n    // if (redirectToReferrer)\n  }\n\n  console.log('auth', authState)\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <label htmlFor=\"email\">\n          Email: <input id=\"email\" name=\"email\" ref={register} />\n        </label>\n        <label htmlFor=\"password\">\n          Password: <input id=\"password\" type=\"password\" name=\"password\" ref={register} />\n        </label>\n        <button type=\"submit\">signin</button>\n      </form>\n    </div>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\PrivateRoute.tsx",["91","92"],"import React from 'react'\nimport { Navigate, Route, useNavigate } from 'react-router-dom'\nimport { RouteProps } from 'react-router'\nimport { useAuthState } from 'common/contexts/Auth'\n\nconst isAuthenticated = false\n\nexport const PrivateRoute: React.FC<RouteProps> = (props) => {\n  // const navigate = useNavigate()\n  const authState = useAuthState()\n  if (!authState.loggedIn) return <Navigate to=\"/login\" />\n  return <Route {...props} />\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\Beers.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\AddBeer.tsx",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\EditBeer.tsx",["93"],"import React, { useEffect, useState } from 'react'\nimport IBeer from 'common/models/Beer'\nimport axios from 'axios'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { BeerForm } from './BeerForm'\n\nexport const EditBeer: React.FC = () => {\n  const { id } = useParams()\n  const navigate = useNavigate()\n  const [beer, setBeer] = useState<IBeer | undefined>(undefined)\n  const [loading, setLoading] = useState<boolean>(true)\n\n  useEffect(() => {\n    ;(async (): Promise<void> => {\n      setLoading(true)\n      const { data: fetchedBeer } = await axios.get(`api/beers/${id}`)\n      setBeer(fetchedBeer)\n      setLoading(false)\n    })()\n  }, [])\n  const onSubmit = async (submittedBeer: IBeer): Promise<void> => {\n    const { data: beers } = await axios.patch(`api/beers/${id}`, submittedBeer)\n    navigate('/beers')\n  }\n  return (\n    <>\n      {!loading && <BeerForm onSubmit={onSubmit} submitButtonText=\"save\" beer={beer} />}\n      {loading && <p>loading..</p>}\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\defaultBeerImgUrl.ts",[],"C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\BeerForm.tsx",["94","95"],"import Container from '@material-ui/core/Container'\nimport { makeStyles } from '@material-ui/core/styles'\nimport TextField from '@material-ui/core/TextField'\nimport ThumbDownIcon from '@material-ui/icons/ThumbDown'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport ToggleButton from '@material-ui/lab/ToggleButton'\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\nimport IBeer from 'common/models/Beer'\nimport Rating from 'common/models/Rating'\nimport React, { SyntheticEvent, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport Button from '@material-ui/core/Button'\nimport clsx from 'clsx'\nimport { ImageUpload, UploadedFile } from './ImageUpload'\nimport { MegaLikeIcon } from './icons/MegaLikeIcon'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  formElement: {\n    marginTop: '12px',\n    '&:first-child': {\n      marginTop: '0',\n    },\n  },\n}))\n\nconst getBase64 = async (file: Blob): Promise<string | undefined> => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file as Blob)\n\n  return new Promise((resolve, reject) => {\n    reader.onload = (): void => (reader.result ? resolve(reader.result as string) : resolve(undefined))\n    reader.onerror = (error): void => reject(error)\n  })\n}\n\ninterface Props {\n  onSubmit(beer: IBeer): void\n  submitButtonText: string\n  beer?: IBeer | undefined\n  // loading?: boolean\n}\n\nexport const BeerForm: React.FC<Props> = ({ onSubmit, submitButtonText, beer }) => {\n  const classes = useStyles()\n\n  const [rating, setRating] = useState<Rating | undefined>()\n  const [pictureURL, setPictureURL] = useState<string>()\n  const { register, handleSubmit, watch, errors, reset } = useForm<IBeer>()\n\n  useEffect(() => {\n    reset(beer)\n    setRating(beer && beer.rating)\n    setPictureURL(beer && beer.picture)\n  }, [beer])\n  const handleRate = (event: SyntheticEvent, newRating: Rating): void => {\n    setRating(newRating)\n  }\n  const handleSubmitFile = async (file: UploadedFile): Promise<void> => {\n    let picture = ''\n    if (file) {\n      picture = (await getBase64(file)) || ''\n    }\n    setPictureURL(picture)\n  }\n  const submitForm = async (baseBeer: IBeer): Promise<void> => {\n    const submittedBeer: IBeer = { ...baseBeer, rating, picture: pictureURL }\n    console.log(beer)\n    onSubmit(submittedBeer)\n  }\n  return (\n    <>\n      <form onSubmit={handleSubmit(submitForm)} className={classes.root}>\n        <Container maxWidth=\"xs\" className={classes.formElement}>\n          <ImageUpload onSubmitFile={handleSubmitFile} pictureURL={pictureURL} />\n        </Container>\n        <TextField id=\"name\" name=\"name\" label=\"Name\" inputRef={register} className={classes.formElement} fullWidth />\n\n        <ToggleButtonGroup\n          exclusive\n          value={rating}\n          onChange={handleRate}\n          className={clsx({ [classes.formElement]: true })}\n          size=\"large\"\n        >\n          <ToggleButton value={Rating.DISLIKE} aria-label=\"thumbs down\">\n            <ThumbDownIcon />\n          </ToggleButton>\n          <ToggleButton value={Rating.LIKE} aria-label=\"thumbs up\">\n            <ThumbUpIcon style={{ color: '#48a70b' }} />\n          </ToggleButton>\n          <ToggleButton value={Rating.MEGALIKE} aria-label=\"mega thumbs up\">\n            <MegaLikeIcon svgProps={{ style: { overflow: 'visible' } }} />\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        <Button className={classes.formElement} variant=\"outlined\" fullWidth type=\"submit\">\n          {submitButtonText}\n        </Button>\n      </form>\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\ImageUpload.tsx",["96"],"import React, { SyntheticEvent, useEffect, useState, useCallback } from 'react'\nimport { FileRejection, useDropzone } from 'react-dropzone'\nimport { makeStyles } from '@material-ui/core/styles'\nimport clsx from 'clsx'\nimport AddIcon from '@material-ui/icons/Add'\n\nconst useStyles = makeStyles((theme) => ({\n  dropzone: {\n    display: 'flex',\n    justifyContent: 'center',\n    color: '#bdbdbd',\n    padding: '20px',\n    border: '3px dashed #eeeeee',\n    backgroundColor: 'white',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n    boxSizing: 'border-box',\n  },\n  dropReject: {\n    borderColor: 'red',\n  },\n  dropAccept: {\n    borderColor: 'lightgreen',\n  },\n  dropActive: {\n    backgroundColor: '#eeeeee',\n    color: 'black',\n  },\n  thumbsContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 16,\n  },\n\n  emptyFileInput: { display: 'flex', flexDirection: 'column', alignItems: 'center' },\n  img: {\n    maxWidth: '100%',\n    height: 'auto',\n  },\n}))\n\nexport interface UploadedFile extends File {\n  preview?: string\n}\ninterface IProps {\n  onSubmitFile(uploadedFile: UploadedFile): void\n  pictureURL?: string\n}\n\n// TODO props?\nexport const ImageUpload: React.FC<IProps> = ({ onSubmitFile, pictureURL }) => {\n  const [file, setFile] = useState<UploadedFile>()\n\n  useEffect(() => {\n    return (): void => {\n      if (file && file.preview) {\n        URL.revokeObjectURL(file.preview)\n      }\n    }\n  }, [])\n  const onDrop = useCallback((acceptedFiles: File[], rejectedFiles: FileRejection[]) => {\n    if (rejectedFiles.length > 0) {\n      // TODO \"error toast\" something\n      console.log('rejectedFiles', rejectedFiles)\n    }\n    const uploadedFile: UploadedFile = acceptedFiles[0]\n    if (uploadedFile) {\n      setFile(\n        Object.assign(uploadedFile, {\n          preview: URL.createObjectURL(uploadedFile),\n        }),\n      )\n      onSubmitFile(uploadedFile)\n    }\n  }, [])\n\n  const classes = useStyles()\n  const { getRootProps, getInputProps, isDragActive, isDragAccept, isDragReject } = useDropzone({\n    onDrop,\n    maxSize: 5242880,\n    minSize: 2,\n    maxFiles: 1,\n    accept: 'image/*',\n  })\n\n  return (\n    <>\n      <div\n        {...getRootProps({\n          className: clsx({\n            [classes.dropzone]: true,\n            [classes.dropReject]: isDragReject,\n            [classes.dropAccept]: isDragAccept,\n            [classes.dropActive]: isDragActive,\n          }),\n        })}\n      >\n        <input {...getInputProps()} />\n        {!pictureURL && (\n          <div className={classes.emptyFileInput}>\n            <AddIcon fontSize=\"large\" />\n            <p>Import your beer picture by dragging it or clicking here</p>\n          </div>\n        )}\n        {pictureURL && <img src={pictureURL} alt=\"beer\" className={classes.img} />}\n      </div>\n      {/* <aside className={classes.thumbsContainer}>{thumbs}</aside> */}\n    </>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\components\\icons\\MegaLikeIcon.tsx",["97"],"import React from 'react'\nimport { withTheme } from '@material-ui/core/styles'\nimport SvgIcon from '@material-ui/core/SvgIcon'\n\ninterface IProps {\n  color?: string\n  svgProps?: unknown\n}\n\nexport const MegaLikeIcon: React.FC<IProps> = ({ color, svgProps }) => {\n  return (\n    <SvgIcon width=\"1em\" height=\"1em\" {...svgProps} viewBox=\"2 10 18 18\">\n      <path\n        d=\"M9.551 30.5598C9.8499 30.7187 10.1652 30.3746 9.9822 30.0898C8.9889 28.5438 8.0483 25.9424 9.5469 22.5922C12.046 17.0054 13.5667 14.1118 13.5667 14.1118S14.3755 17.4886 16.5681 20.491C18.6783 23.3806 19.8334 27.0149 17.9713 30.0424C17.7965 30.3266 18.1047 30.6618 18.4017 30.5098C20.7067 29.3307 23.292 26.9656 23.5837 22.259C23.6913 20.8208 23.5299 18.8073 22.7234 16.2664C21.6864 13.0461 20.4114 11.5434 19.6738 10.8982C19.4532 10.7052 19.11 10.8762 19.1281 11.1688C19.3431 14.6435 18.0359 15.5252 17.2918 13.5381C16.9946 12.7444 16.8214 11.3716 16.8214 9.6998C16.8214 6.9166 16.0139 4.0514 14.2336 1.7232C13.7706 1.1178 13.229.552 12.6074.0696C12.3824-.1051 12.0562.0705 12.0768.3546C12.2135 2.2414 12.0896 7.6488 7.3456 14.109C3.0442 20.1016 4.711 24.7038 5.3024 25.9503C6.4333 28.3384 8.0106 29.7407 9.551 30.5598Z\"\n        fill=\"#fc6400\"\n      />\n      <path\n        d=\"M1 31H5V19H1V31ZM23 20C23 18.9 22.1 18 21 18H14.69L15.64 13.43L15.67 13.11C15.67 12.7 15.5 12.32 15.23 12.05L14.17 11L7.59 17.59C7.22 17.95 7 18.45 7 19V29C7 30.1 7.9 31 9 31H18C18.83 31 19.54 30.5 19.84 29.78L22.86 22.73C22.95 22.5 23 22.26 23 22V20Z\"\n        fill={color || '#9d9d9d' || '#48a70b'}\n      />\n    </SvgIcon>\n  )\n}\n","C:\\Users\\victor\\Documents\\GitHub\\my-beers\\packages\\web-app\\src\\utils\\useInfiniteScroll.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"112","line":2,"column":18,"nodeType":"110","messageId":"111","endLine":2,"endColumn":23},{"ruleId":"108","severity":1,"message":"113","line":2,"column":25,"nodeType":"110","messageId":"111","endLine":2,"endColumn":31},{"ruleId":"108","severity":1,"message":"114","line":2,"column":33,"nodeType":"110","messageId":"111","endLine":2,"endColumn":37},{"ruleId":"108","severity":1,"message":"115","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":22},{"ruleId":"108","severity":1,"message":"116","line":11,"column":10,"nodeType":"110","messageId":"111","endLine":11,"endColumn":28},{"ruleId":"108","severity":1,"message":"117","line":11,"column":30,"nodeType":"110","messageId":"111","endLine":11,"endColumn":51},{"ruleId":"108","severity":1,"message":"118","line":12,"column":35,"nodeType":"110","messageId":"111","endLine":12,"endColumn":40},{"ruleId":"108","severity":1,"message":"119","line":12,"column":42,"nodeType":"110","messageId":"111","endLine":12,"endColumn":48},{"ruleId":"108","severity":1,"message":"120","line":2,"column":27,"nodeType":"110","messageId":"111","endLine":2,"endColumn":38},{"ruleId":"108","severity":1,"message":"121","line":6,"column":7,"nodeType":"110","messageId":"111","endLine":6,"endColumn":22},{"ruleId":"108","severity":1,"message":"122","line":22,"column":19,"nodeType":"110","messageId":"111","endLine":22,"endColumn":24},{"ruleId":"108","severity":1,"message":"118","line":53,"column":35,"nodeType":"110","messageId":"111","endLine":53,"endColumn":40},{"ruleId":"108","severity":1,"message":"119","line":53,"column":42,"nodeType":"110","messageId":"111","endLine":53,"endColumn":48},{"ruleId":"108","severity":1,"message":"123","line":1,"column":17,"nodeType":"110","messageId":"111","endLine":1,"endColumn":31},{"ruleId":"108","severity":1,"message":"124","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":19},"lines-around-directive",["125"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'purple' is defined but never used.","Identifier","unusedVar","'green' is defined but never used.","'orange' is defined but never used.","'grey' is defined but never used.","'PrivateRoute' is defined but never used.","'redirectToReferrer' is assigned a value but never used.","'setRedirectToReferrer' is assigned a value but never used.","'watch' is assigned a value but never used.","'errors' is assigned a value but never used.","'useNavigate' is defined but never used.","'isAuthenticated' is assigned a value but never used.","'beers' is assigned a value but never used.","'SyntheticEvent' is defined but never used.","'withTheme' is defined but never used.","padding-line-between-statements"]